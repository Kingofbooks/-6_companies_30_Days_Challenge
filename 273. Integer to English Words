273. Integer to English Words
Solved
Hard
Topics
Companies
Hint
Convert a non-negative integer num to its English words representation.

 

Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
 

Constraints:

0 <= num <= 231 - 1

ANSWER:
class Solution {
    private final String[] belowTen = new String[] {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
    private final String[] belowTwenty = new String[] {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    private final String[] belowHundred = new String[] {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
    public String numberToWords(int num) {
        if(num==0) return "Zero";
        return converter(num);
    }

    public String converter(int num){
        String res=new String();

        if(num<10) res= belowTen[num];
        else if(num<20) res=belowTwenty[num-10];
        else if(num<100) res=belowHundred[num/10]+" "+converter(num%10);
        else if(num<1000) res=converter(num/100)+" Hundred "+converter(num%100);
        else if(num<1000000) res=converter(num/1000)+" Thousand "+converter(num%1000);
        else if(num<1000000000) res=converter(num/1000000)+" Million "+converter(num%1000000);
        else res=converter(num/1000000000)+" Billion "+converter(num%1000000000);

        return res.trim();
    }
}
